{"ast":null,"code":"import _defineProperty from \"/Users/ssionii/Documents/develop/Web/todo-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/ssionii/Documents/develop/Web/todo-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ssionii/Documents/develop/Web/todo-app/src/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useRef, useCallback } from 'react';\nimport TodoTemplate from './components/TodoTemplate';\nimport TodoInsert from './components/TodoInsert';\nimport TodoList from './components/TodoList';\n\nconst App = () => {\n  const _useState = useState([{\n    id: 1,\n    text: '리액트의 기초 알아보기',\n    checked: true\n  }, {\n    id: 2,\n    text: '컴포넌트 스타일링 해보기',\n    checked: true\n  }, {\n    id: 3,\n    text: '일정 관리 앱 만들어 보기',\n    checked: false\n  }]),\n        _useState2 = _slicedToArray(_useState, 2),\n        todos = _useState2[0],\n        setTodos = _useState2[1];\n\n  const nextId = useRef(4);\n  const onInsert = useCallback(text => {\n    const todo = {\n      id: nextId.current,\n      text,\n      checked: false\n    };\n    setTodos(todos.concat(todo));\n    nextId.current += 1;\n  }, [todos]);\n  const onRemove = useCallback(id => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  }, [todos]);\n  const onToggle = useCallback(id => {\n    setTodos(todos.map(todo => todo.id === id ? _objectSpread({}, todo, {\n      checked: !todo.checked\n    }) : todo));\n  }, [todos]);\n  return React.createElement(TodoTemplate, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(TodoInsert, {\n    onInsert: onInsert,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(TodoList, {\n    todos: todos,\n    onRemove: onRemove,\n    onToggle: onToggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/ssionii/Documents/develop/Web/todo-app/src/App.js"],"names":["React","useState","useRef","useCallback","TodoTemplate","TodoInsert","TodoList","App","id","text","checked","todos","setTodos","nextId","onInsert","todo","current","concat","onRemove","filter","onToggle","map"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,EAAiCC,WAAjC,QAAmD,OAAnD;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA,oBAEUN,QAAQ,CAAE,CAClC;AACEO,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,cAFR;AAGEC,IAAAA,OAAO,EAAE;AAHX,GADkC,EAMlC;AACEF,IAAAA,EAAE,EAAC,CADL;AAEEC,IAAAA,IAAI,EAAE,eAFR;AAGEC,IAAAA,OAAO,EAAE;AAHX,GANkC,EAWlC;AACEF,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,gBAFR;AAGEC,IAAAA,OAAO,EAAE;AAHX,GAXkC,CAAF,CAFlB;AAAA;AAAA,QAETC,KAFS;AAAA,QAEFC,QAFE;;AAoBhB,QAAMC,MAAM,GAAGX,MAAM,CAAC,CAAD,CAArB;AAEA,QAAMY,QAAQ,GAAGX,WAAW,CAC1BM,IAAI,IAAI;AACN,UAAMM,IAAI,GAAG;AACXP,MAAAA,EAAE,EAAEK,MAAM,CAACG,OADA;AAEXP,MAAAA,IAFW;AAGXC,MAAAA,OAAO,EAAE;AAHE,KAAb;AAKAE,IAAAA,QAAQ,CAACD,KAAK,CAACM,MAAN,CAAaF,IAAb,CAAD,CAAR;AACAF,IAAAA,MAAM,CAACG,OAAP,IAAkB,CAAlB;AACD,GATyB,EAU1B,CAACL,KAAD,CAV0B,CAA5B;AAaA,QAAMO,QAAQ,GAAGf,WAAW,CAC1BK,EAAE,IAAG;AACHI,IAAAA,QAAQ,CAACD,KAAK,CAACQ,MAAN,CAAaJ,IAAI,IAAIA,IAAI,CAACP,EAAL,KAAYA,EAAjC,CAAD,CAAR;AACD,GAHyB,EAGvB,CAACG,KAAD,CAHuB,CAA5B;AAMA,QAAMS,QAAQ,GAAGjB,WAAW,CAC1BK,EAAE,IAAI;AACJI,IAAAA,QAAQ,CACND,KAAK,CAACU,GAAN,CAAUN,IAAI,IACZA,IAAI,CAACP,EAAL,KAAYA,EAAZ,qBAAqBO,IAArB;AAA2BL,MAAAA,OAAO,EAAE,CAACK,IAAI,CAACL;AAA1C,SAAqDK,IADvD,CADM,CAAR;AAID,GANyB,EAMvB,CAACJ,KAAD,CANuB,CAA5B;AASA,SACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,QAAQ,EAAEG,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEH,KAAjB;AAAwB,IAAA,QAAQ,EAAGO,QAAnC;AAA6C,IAAA,QAAQ,EAAEE,QAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CAxDD;;AA0DA,eAAeb,GAAf","sourcesContent":["import React, {useState, useRef, useCallback} from 'react';\nimport TodoTemplate from './components/TodoTemplate';\nimport TodoInsert from './components/TodoInsert'\nimport TodoList from './components/TodoList'\n\nconst App = () => {\n\n  const [todos, setTodos] = useState ([\n    {\n      id: 1,\n      text: '리액트의 기초 알아보기',\n      checked: true,\n    },\n    {\n      id:2,\n      text: '컴포넌트 스타일링 해보기',\n      checked: true,\n    },\n    {\n      id: 3,\n      text: '일정 관리 앱 만들어 보기',\n      checked: false,\n    },\n  ]);\n\n  const nextId = useRef(4);\n  \n  const onInsert = useCallback(\n    text => {\n      const todo = {\n        id: nextId.current,\n        text,\n        checked: false,\n      };\n      setTodos(todos.concat(todo));\n      nextId.current += 1;\n    },\n    [todos],\n  );\n\n  const onRemove = useCallback(\n    id =>{\n      setTodos(todos.filter(todo => todo.id !== id));\n    }, [todos],\n  );\n\n  const onToggle = useCallback(\n    id => {\n      setTodos(\n        todos.map(todo =>\n          todo.id === id ? {...todo, checked: !todo.checked} : todo, ),\n      );\n    }, [todos],\n  );\n\n  return (\n    <TodoTemplate>\n      <TodoInsert onInsert={onInsert}/>\n      <TodoList todos={todos} onRemove ={onRemove} onToggle={onToggle}/>\n    </TodoTemplate>\n  )\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}